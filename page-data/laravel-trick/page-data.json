{"componentChunkName":"component---src-templates-blog-post-js","path":"/laravel-trick/","webpackCompilationHash":"74e08bd1f829f53045fc","result":{"data":{"site":{"siteMetadata":{"title":"Codycrunch","author":"NicoAudy"}},"markdownRemark":{"id":"ae944191-e7e2-5ceb-b15e-0973fb16ea31","html":"<hr>\n<h2 id=\"1-refactor-your-collections-son\"><a href=\"#1-refactor-your-collections-son\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Refactor your collections, son</h2>\n<p>Imagine that you’re developing a website where students participate in projects and are graded every week, and your job is to display to their mentors the current average score of all students in a given project, effectively grading the project’s average student score, in order to track progression.</p>\n<p>You may come up with a Project class like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Project</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Model</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/** ... code comitted for brevity **/</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">studentsAverageScore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$participants</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">participants</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token variable\">$sum</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$totalStudents</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$participants</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$participant</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$participant</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">isStudent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token variable\">$totalStudents</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                <span class=\"token variable\">$sum</span> <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token variable\">$participant</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">student</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">lastRating</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">averageScore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$sum</span> <span class=\"token operator\">/</span> <span class=\"token variable\">$totalStudents</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>So how can we express these checks and calculations better? More semantically? Fortunately, we can use a bit of functional programming with the methods that Eloquent gives us.</p>\n<p>Instead of checking manually if a given participant is a student, using the filter method can return only the students for us:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">studentsAverageScore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$participants</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">participants</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token variable\">$participants</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$participant</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$participant</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">isStudent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>Naturally, we also need to finish this by calculating their average score. Should we do a <code class=\"language-text\">foreach</code> now? It would still be suboptimal. There’s a built-in solution in another function, conveniently called <code class=\"language-text\">average</code>, in our returned Eloquent collection. It follows rules similar to <code class=\"language-text\">filter</code>, where we just return which value we want to average from the whole colllection. The final code looks like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">studentsAverageScore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$participants</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">participants</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$participants</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$participant</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$participant</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">isStudent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">average</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$participant</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$participant</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">student</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">lastRating</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">averageScore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<h2 id=\"2-try-this-clean-one-method-way-to-query-where\"><a href=\"#2-try-this-clean-one-method-way-to-query-where\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Try this clean, one-method way to query ‘where’</h2>\n<p>Let’s say you want to do the following SQL query:</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">`</span>users<span class=\"token punctuation\">`</span>\n    <span class=\"token keyword\">WHERE</span>\n        <span class=\"token punctuation\">`</span>name<span class=\"token punctuation\">`</span> <span class=\"token operator\">=</span> <span class=\"token string\">'some_name'</span>\n        <span class=\"token operator\">AND</span> <span class=\"token punctuation\">`</span>email<span class=\"token punctuation\">`</span> <span class=\"token operator\">=</span> <span class=\"token string\">'some_email'</span>\n    <span class=\"token keyword\">LIMIT</span> <span class=\"token number\">1</span></code></pre></div>\n<p>You can achieve this with one <code class=\"language-text\">&#39;where&#39;</code> method call. Eloquent will work out that the “and” in the middle means two seperate where clauses:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\">User<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">whereNameAndEmail</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'some_name'</span><span class=\"token punctuation\">,</span><span class=\"token single-quoted-string string\">'some@email'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>And as well as “and”, you can also do an “or” like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\">User<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">whereFooOrBar</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'foo value'</span><span class=\"token punctuation\">,</span><span class=\"token single-quoted-string string\">'bar value'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"3-me-return-hasil-data-setelah-update-querying\"><a href=\"#3-me-return-hasil-data-setelah-update-querying\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Me-return hasil data setelah update querying</h2>\n<p>Untuk beberapa kasus, saya ingin mereturn hasil update data. Jika sebelumnya menggunakan <code class=\"language-text\">method</code> seperti di bawah ini : </p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$row</span> <span class=\"token operator\">=</span> User<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">return</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre></div>\n<p>Maka response dari hasil di atas akan menjadi boolean. Untuk memenuhi kebutuhan maka kita dapat menggunakan cara seperti berikut :</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$row</span> <span class=\"token operator\">=</span> <span class=\"token function\">tap</span><span class=\"token punctuation\">(</span>User<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">fresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">return</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// data: { ... }</span></code></pre></div>\n<h2 id=\"4-string-plural\"><a href=\"#4-string-plural\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. String Plural</h2>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$friends</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">return</span> <span class=\"token double-quoted-string string\">\"I have \"</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$friends</span><span class=\"token punctuation\">.</span> <span class=\"token double-quoted-string string\">\" \"</span> <span class=\"token punctuation\">.</span> <span class=\"token function\">str_plural</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'friend'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$friends</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/// I have 5 friends</span></code></pre></div>\n<h2 id=\"5-date-filtering\"><a href=\"#5-date-filtering\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. Date Filtering</h2>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$q</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">whereDate</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'created_at'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'Y-m-d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$q</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">whereDay</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'created_at'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$q</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">whereMonth</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'created_at'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'m'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$q</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">whereYear</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'created_at'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'Y'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"6-collection-filters\"><a href=\"#6-collection-filters\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. Collection filters</h2>\n<p>Keeps the item only if the closure returns true</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$customers</span> <span class=\"token operator\">=</span> Customer<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$javanese_customers</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$customers</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$customer</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$customer</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">province</span> <span class=\"token operator\">==</span> <span class=\"token single-quoted-string string\">'Jawa Tengah'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"7-where-has\"><a href=\"#7-where-has\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. Where Has</h2>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$callback</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$query</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$query</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'something'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'='</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'something'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token variable\">$submissions</span> <span class=\"token operator\">=</span> Post<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">whereHas</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'submissions'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$callback</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'submissions'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token variable\">$callback</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","timeToRead":3,"frontmatter":{"title":"Laravel Tricks","date":"April 04, 2019","spoiler":"Now im focused on how to improve my laravel code and project structure. So why not share the knowledge ?"},"fields":{"slug":"/laravel-trick/","langKey":"en"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/laravel-trick/","previous":{"fields":{"slug":"/using-single-action-classes-in-controller/","langKey":"en","directoryName":"using-single-action-classes-in-controller","maybeAbsoluteLinks":[]},"frontmatter":{"title":"Using Single Action Classes in Controller"}},"next":{"fields":{"slug":"/make-a-copy-of-row-laravel/","langKey":"en","directoryName":"make-a-copy-of-row-laravel","maybeAbsoluteLinks":[]},"frontmatter":{"title":"Make a copy of row - Laravel"}},"translations":[],"translatedLinks":[]}}}